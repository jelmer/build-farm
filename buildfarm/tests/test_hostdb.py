#!/usr/bin/python
# Copyright (C) Jelmer Vernooij <jelmer@samba.org> 2010
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

from buildfarm import hostdb

import testtools


class HostTests(testtools.TestCase):

    def test_create_simple(self):
        host = hostdb.Host(name="foo")
        self.assertEquals(None, host.owner)
        self.assertEquals("foo", host.name)

    def test_create_with_owner(self):
        host = hostdb.Host(name="foo", owner=u"Jelmer", owner_email=u"jelmer@samba.org")
        self.assertEquals((u"Jelmer", u"jelmer@samba.org"), host.owner)
        self.assertEquals(u"foo", host.name)


class HostDatabaseTests(object):

    def test_createhost(self):
        self.db.createhost("charis", u"linux", u"Jelmer", u"jelmer@samba.org", u"bla", u"Pemrission?")
        hosts = list(self.db.hosts())
        self.assertEquals(1, len(hosts))
        self.assertEquals("charis", hosts[0].name)

    def test_host(self):
        newhost = self.db.createhost("charis", u"linux", u"Jelmer", u"jelmer@samba.org", u"bla", u"Pemrission?")
        samehost = self.db["charis"]
        self.assertEquals(samehost, newhost)

    def test_create_already_exists(self):
        host = self.db.createhost(name="foo", owner=u"Jelmer", owner_email=u"jelmer@samba.org")
        self.assertRaises(hostdb.HostAlreadyExists,  self.db.createhost, name="foo",
            owner=u"Jelmer", owner_email=u"jelmer@samba.org")

    def test_delete(self):
        host = self.db.createhost(name="foo", owner=u"Jelmer", owner_email=u"jelmer@samba.org")
        self.db.deletehost("foo")

    def test_delete_doesntexist(self):
        self.assertRaises(hostdb.NoSuchHost, self.db.deletehost, "foo")

    def test_update_platform(self):
        host = self.db.createhost(name="foo", owner=u"Jelmer",
            owner_email=u"jelmer@samba.org")
        host.update_platform(u"Debian")

    def test_update_owner(self):
        host = self.db.createhost(name="foo", owner=u"Jelmer", owner_email=u"jelmer@samba.org")
        host.update_owner(new_owner=u"Matthieu", new_owner_email=u"mat@samba.org")

    def test_create_rsync_secrets(self):
        self.db.createhost(name="foo")
        self.db.createhost(name="bla", owner=u"Jelmer", owner_email=u"jelmer@samba.org",
            platform=u"Fedora", password=u"o")
        expected = [
            "# rsyncd.secrets file\n",
            "# automatically generated by textfiles.pl. DO NOT EDIT!\n\n",
            "# foo, owner unknown\n",
            "# foo password is unknown\n\n",
            "# bla, owner: Jelmer <jelmer@samba.org>\n",
            "bla:o\n\n"]
        expected.sort()
        got = list(self.db.create_rsync_secrets())
        got.sort()
        self.assertEquals(expected, got)
