per_run_hook

export CFLAGS="-Wall -g"

compiler=gcc

# this is not needed, but its useful as a test
. install_python.fns

# do most packages
. common.fns

# now the valgrind ones
export SMBD_VALGRIND="valgrind -q --num-callers=30 --log-file=st/valgrind.log_%p --gen-suppressions=all --suppressions=.valgrind_suppressions"
export NMBD_VALGRIND="valgrind -q --num-callers=30 --log-file=st/valgrind.log_%p --gen-suppressions=all --suppressions=.valgrind_suppressions"
export WINBINDD_VALGRIND="valgrind -q --num-callers=30 --log-file=st/valgrind.log_%p --gen-suppressions=all --suppressions=.valgrind_suppressions"
export SAMBA_VALGRIND="valgrind -q --num-callers=30 --log-file=st/valgrind.log_%p --gen-suppressions=all --suppressions=.valgrind_suppressions"
export VALGRIND="valgrind -q --num-callers=30 --log-file=st/valgrind.log_%p --gen-suppressions=all --suppressions=.valgrind_suppressions"

export MAXTIME=24000
export TORTURE_MAXTIME=7200
export SMBD_MAXTIME=24000
export SAMBA_MAXTIME=24000

test_tree samba_4_0_waf source4 gcc
test_tree samba_4_0_test source gcc
test_tree samba_3_current source gcc
test_tree samba_3_next source gcc
test_tree samba_3_master source gcc

export TESTS_ENVIRONMENT="$PWD/lorikeet-heimdal/libtool --mode=execute valgrind --trace-children=yes --quiet -q --num-callers=30 --gen-suppressions=all --suppressions=$PWD/lorikeet-heimdal/cf/valgrind-suppressions"
test_tree lorikeet-heimdal . gcc
